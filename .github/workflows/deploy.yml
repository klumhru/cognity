name: 'Backend Deployment'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  lambdas:
    name: 'Lambda build'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Lambdas
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2.1.2
        with:
          go-version: 1.15

      - name: Tests
        run: go test ./...

      - name: Build
        run: |
          mkdir -p /tmp/build
          go build -o /tmp/build/sqs-forward sqs-forward/main.go

      - name: Debug
        run: ls -laR

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: sqs-forward
          path: /tmp/build/sqs-forward

  backend:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: [lambdas]

    defaults:
      run:
        shell: bash
        working-directory: Backend

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      id: artifact
      with:
        name: sqs-forward

    - name: Package lambda
      run: zip -jD ${{steps.artifact.outputs.download-path}}/sqs-forward.zip ${{steps.artifact.outputs.download-path}}/sqs-forward

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      env:
        TF_CLI_ARGS_init: -backend-config=bucket=${{ secrets.TF_STATE_BUCKET }} -backend-config=key=cognity/backend.tfstate -backend-config=region=${{ secrets.AWS_REGION }} -backend-config=dynamodb_table=${{ secrets.TF_LOCK_TABLE }}

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Workspace
      run: |
        terraform workspace select ${GITHUB_REF#refs/heads/} ||
        terraform workspace new ${GITHUB_REF#refs/heads/}

    - name: Terraform Plan
      run: terraform plan
      env:
        TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
        TF_VAR_lambda_file: ${{steps.artifact.outputs.download-path}}/sqs-forward.zip

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve

    - name: Terraform Output
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform output -json > /tmp/build/cognity.json

    - name: Upload Configuration
      uses: actions/upload-artifact@v2
      with:
        name: configuration
        path: /tmp/build/cognity.json

  publish:
    name: Publish configuration changes
    runs-on: ubuntu-latest
    needs: [backend]
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: semver
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true

      - uses: actions/download-artifact@v2
        id: artifact
        with:
          name: configuration

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.new_tag }}
          release_name: Release ${{ steps.semver.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Upload Configuration
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./cognity.json
          asset_name: cognity.json
          asset_content_type: application/json
